#include <Arduino.h>
#include <TM1637Display.h>
#include <TimerOne.h>
 
const byte CLK1 = 2;   // define CLK pin (any digital pin)
const byte DIO1 = 3;   // define DIO pin (any digital pin)
const int IRSensorPin = 7;
const float Diameter = 100000.0;
 
const uint8_t SEG_DONE[] = {
  SEG_B | SEG_C | SEG_D | SEG_E | SEG_G,           // d
  SEG_A | SEG_B | SEG_C | SEG_D | SEG_E | SEG_F,   // O
  SEG_C | SEG_E | SEG_G,                           // n
  SEG_A | SEG_D | SEG_E | SEG_F | SEG_G            // E
};
 
const uint8_t SEG_ERR[] = {
  SEG_A | SEG_D | SEG_E | SEG_F | SEG_G,            // E
  SEG_E | SEG_G, // R
  SEG_E | SEG_G, // R
};
 
TM1637Display display1(CLK1, DIO1);// define dispaly 1 object
 
uint8_t data[] = { 0x0, 0x0, 0x0, 0x0 };  // all segments clear
int inputState;                          // the current state from the input pin
int lastInputState = LOW;        // the previous InputState from the input pin
long lastDebounceTime = 0;   // the last time the output pin was toggled
long debounceDelay = 5;        // the debounce time; increase if the output flickers
long time;
long endTime;
long startTime;
int lin_vel;
int RPM = 0;
 
float lnTime = 0;

void setup() {
  pinMode(IRSensorPin, INPUT);
  display1.setBrightness(0x0f);// set brightness of dispaly 1
  Serial.begin(9600);
  display1.setSegments(SEG_DONE);
  delay(1000);
  endTime = 0;
  Timer1.initialize(1000000);  // Set the timer to 60 rpm, 1,000,000 microseconds (1 second)
  Timer1.attachInterrupt(timerIsr);  // Attach the service routine here
}
 
void loop() {
 
  time = millis();
  int currentSwitchState = digitalRead(IRSensorPin);
 
  if (currentSwitchState != lastInputState) {
    lastDebounceTime = millis();
  }
 
  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (currentSwitchState != inputState) {
      inputState = currentSwitchState;
      if (inputState == LOW) {
 
        calculateRPM(); 
 
      }
      else {
 
      }
    }
  }
  lastInputState = currentSwitchState;
}
 
// ---------------------------------------------------------------
void calculateRPM() {
  startTime = lastDebounceTime;
  lnTime = startTime - endTime;
  RPM = 60000 / (startTime - endTime);
  endTime = startTime;
}
 
 
void timerIsr()
{
  // Print RPM every second
  // RPM based on timer
  Serial.println("---------------");
  time = millis() / 1000;
  Serial.print(time);
  Serial.print(" RPM: ");
  Serial.println(RPM);
  lin_vel = (Diameter) * RPM * (PI / 60) * 3600/100000000;   //KM/H
  int lin_vel_16 = lin_vel;
  Serial.print(" Linear_Speed: ");
  Serial.println(lin_vel);
  display1.showNumberDec(lin_vel_16);
  delay(10);
  RPM = 0;
}